#ifndef RSA_ENCRYPT_H
#define RSA_ENCRYPT_H

#include <stdint.h>

// public exponent (e = 65537)
static const uint8_t PUBLIC_EXPONENT[] = { 0x01, 0x00, 0x01 };

// 1024-bit RSA modulus (n)
static const uint8_t MODULUS[128] = {
    0xA4, 0x3B, 0xF5, 0x73, 0x3D, 0xA5, 0x90, 0xB4, 0x42, 0x20, 0x33, 0xE1, 0xF1, 0x75, 0x1F, 0x02,
    0x33, 0x57, 0x58, 0x4B, 0xD1, 0x7B, 0x37, 0x96, 0x32, 0x9D, 0x2C, 0x51, 0x5C, 0x6B, 0x49, 0x0B,
    0x3D, 0xD1, 0xC5, 0x80, 0x1A, 0xB4, 0x1D, 0xE3, 0xF7, 0xD7, 0xBC, 0xB3, 0x8D, 0x64, 0x3A, 0x7E,
    0xAB, 0xE7, 0xB6, 0xE3, 0x38, 0xA2, 0xF9, 0x53, 0x70, 0x1C, 0x59, 0x40, 0xB2, 0x67, 0x0A, 0x51,
    0x9E, 0x28, 0x92, 0x8C, 0xD4, 0x44, 0x04, 0xF4, 0x65, 0x44, 0x3B, 0x7B, 0x5F, 0xA6, 0xE3, 0x16,
    0x1E, 0xA1, 0xE1, 0x10, 0x5A, 0x31, 0x55, 0x65, 0x93, 0xAE, 0xF4, 0xBC, 0x7C, 0x02, 0x85, 0xD0,
    0x0F, 0xDE, 0x90, 0x20, 0x57, 0xE2, 0xC5, 0x7F, 0x0E, 0x0E, 0xAB, 0x68, 0x92, 0x47, 0xA5, 0x1D,
    0xD7, 0x9C, 0x97, 0x63, 0x88, 0x8C, 0x67, 0x91, 0xA2, 0x88, 0x63, 0x8F, 0xB0, 0xBE, 0xC3, 0x0D
};

// 1024-bit RSA private exponent (d)
static const uint8_t PRIVATE_EXPONENT[128] = {
    0x23, 0xCD, 0x4B, 0x71, 0x6A, 0x57, 0x8B, 0xB6, 0xC7, 0x3A, 0xE6, 0x91, 0x20, 0xDD, 0xF3, 0x79,
    0x02, 0xD1, 0xE8, 0xAC, 0x7D, 0x0A, 0x2C, 0x6D, 0xC4, 0x76, 0xD7, 0x90, 0xC6, 0x82, 0x32, 0x0A,
    0xA9, 0x5E, 0xE1, 0x8F, 0x86, 0x76, 0x5F, 0xAC, 0x3E, 0xB9, 0xD6, 0xE0, 0x14, 0x5B, 0x75, 0xA2,
    0x34, 0x14, 0x51, 0x86, 0xA4, 0x0E, 0x64, 0x22, 0xAC, 0xFD, 0xA2, 0x16, 0x3C, 0xB6, 0x41, 0xED,
    0x7B, 0x77, 0xC2, 0x32, 0xA3, 0xAE, 0x12, 0x08, 0xDA, 0x5D, 0x56, 0x1A, 0xCE, 0xBD, 0x8C, 0xD5,
    0x76, 0x1A, 0xE2, 0x25, 0x4D, 0x37, 0x6A, 0x13, 0x3B, 0xC5, 0xE7, 0x62, 0x7D, 0xF4, 0xE6, 0x56,
    0xA6, 0x22, 0xF7, 0x91, 0x82, 0xC5, 0xA0, 0x3D, 0x55, 0x4E, 0xF6, 0xD7, 0x0E, 0xB7, 0x62, 0xAF,
    0x57, 0xF7, 0xAC, 0x8F, 0x5A, 0xE0, 0x28, 0x72, 0x38, 0xDA, 0x8E, 0x51, 0x76, 0x09, 0x94, 0x3D
};

#endif // RSA_ENCRYPT_H
